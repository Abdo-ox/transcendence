
services:

  user_management:
    build:
      context: ./srcs
      dockerfile: user_management/Dockerfile
    container_name: user_management
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./srcs/user_management/app:/usr/src/app
    networks:
      - net
    depends_on:
      - db_nginx

  db_nginx:
    build: 
      context: ./srcs
      dockerfile: db_nginx/Dockerfile
      args:
        CRT_PATH: ${PATH_CRT}
    container_name: db_nginx
    ports:
      - "443:443"
      - "8080:80"
    env_file:
      - .env
    networks:
      - net
    volumes:
      - ./srcs/db_nginx/front-end:/usr/share/nginx/html
      - db_nginx:/var/lib/postgresql/15/main

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - net

  chat:
    build: 
      context: ./srcs
      dockerfile: chat/Dockerfile
    container_name: chat
    ports:
      - "9000:8000"
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      - net
  
  game:
    build: 
      context: ./srcs
      dockerfile: game/Dockerfile
    container_name: game
    depends_on:
      - redis
    ports:
      - "9090:8000"
    env_file:
      - .env
    networks:
      - net
    volumes:
      - ./srcs/game/pong_backend:/game

networks:
  net:

volumes:
        db_nginx:
                driver: local
                driver_opts:
                          type: 'none'
                          o: 'bind'
                          device: './db'